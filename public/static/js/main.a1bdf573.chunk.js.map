{"version":3,"sources":["components/Comic.js","components/ComicsDashboard.js","components/Home.js","components/Navbar.js","components/NoMatch.js","App.js","index.js"],"names":["Comic","state","found","comic","title","img","transcript","day","month","year","comicId","this","props","latest","Axios","get","then","res","latestComic","data","setState","console","log","comicNum","match","params","Number","status","prevState","newTranscript","replace","className","src","Component","ComicsDashboard","nextComicNumHandler","getNewComic","prevComicNumHandler","randomComicHandler","randomComic","Math","floor","random","Button","variant","onClick","Home","style","textDecoration","to","Navbar","bg","Brand","NoMatch","App","Container","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1bdf573.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nclass Comic extends Component {\r\n  state = {\r\n    found: false,\r\n    comic: {\r\n      title: \"\",\r\n      img: \"\",\r\n      transcript: null,\r\n      day: \"\",\r\n      month: \"\",\r\n      year: \"\"\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.latest) {\r\n      //call and use api for latest\r\n      Axios.get(`/api/comic/latest`).then(res => {\r\n        let latestComic = res.data;\r\n        this.setState({\r\n          found: true,\r\n          comic: {\r\n            title: latestComic.title,\r\n            img: latestComic.img,\r\n            transcript: latestComic.transcript,\r\n            day: latestComic.day,\r\n            month: latestComic.month,\r\n            year: latestComic.year\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      console.log(\"Comic.js props comicNum:\", this.props.comicNum);\r\n      //either comicNum comes from props or the route param. check for either\r\n      let comicId;\r\n      // if (this.props.comicNum != null) {\r\n      // comicId = this.props.comicNum;\r\n      // } else {\r\n      comicId = this.props.match.params.comicId;\r\n      // }\r\n      // comicId = this.props.comicNum || this.props.match.params.comicId;\r\n      // //use the route params\r\n      // console.log(\"COMIC ID in Comic.js: \",comicId);\r\n      if (Number(comicId)) {\r\n        if (comicId > 0) {\r\n          // console.log(`comicId: ${comicId}`);\r\n          Axios.get(`/api/comic/${comicId}`).then(res => {\r\n            let comic = res.data;\r\n            if (res.status === 200) {\r\n              this.setState({\r\n                found: true,\r\n                comic: {\r\n                  title: comic.title,\r\n                  img: comic.img,\r\n                  transcript: comic.transcript,\r\n                  day: comic.day,\r\n                  month: comic.month,\r\n                  year: comic.year\r\n                }\r\n              });\r\n            } else if (res.status === 404) {\r\n              this.setState(prevState => ({\r\n                ...prevState,\r\n                found: false\r\n              }));\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let comic;\r\n    if (this.state.found) {\r\n      let { title, img, transcript, day, month, year } = this.state.comic;\r\n      let newTranscript;\r\n      if (transcript !== \"\") {\r\n        newTranscript = transcript.replace(/[{()}]/g, \"\"); //remving the round and squiggly brackets\r\n        newTranscript = newTranscript.replace(/[\\[\\]']+/g, \"\"); //removeing the square brackets\r\n      } else {\r\n        newTranscript = <>None Available</>;\r\n      }\r\n\r\n      comic = (\r\n        <div className=\"mt-3\">\r\n          <h2>Comic Book: {title}</h2>\r\n          <img src={img} />\r\n          <p className=\"mt-2\">\r\n            <span className=\"title\">Details: </span>\r\n            <span className=\"details\">{newTranscript}</span>\r\n          </p>\r\n          <p>\r\n            <span className=\"title\">Release Date (dd-mm-yyyy): </span>\r\n            <span className=\"details\">\r\n              {day}-{month}-{year}\r\n            </span>\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      comic = <p>Comic Book Not Found. Try something else</p>;\r\n    }\r\n\r\n    return <div>{comic}</div>;\r\n  }\r\n}\r\n\r\nexport default Comic;\r\n","import React, { Component } from \"react\";\r\nimport Comic from \"./Comic\";\r\nimport Axios from \"axios\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default class ComicsDashboard extends Component {\r\n  state = {\r\n    // showOthers: null,\r\n    comicNum: 1,\r\n    comic: {\r\n      title: \"\",\r\n      img: \"\",\r\n      transcript: \"\",\r\n      day: \"\",\r\n      month: \"\",\r\n      year: \"\"\r\n    }\r\n  };\r\n\r\n  nextComicNumHandler = () => {\r\n    console.log(\"Next Comic\");\r\n    this.setState(\r\n      prevState => ({\r\n        // showOthers: true,\r\n        ...prevState,\r\n        comicNum: prevState.comicNum + 1\r\n      }),\r\n      () => this.getNewComic()\r\n    );\r\n  };\r\n  prevComicNumHandler = () => {\r\n    console.log(\"Prev Comic\");\r\n    if (this.state.comicNum > 1) {\r\n      this.setState(\r\n        prevState => ({\r\n          // showOthers: true,\r\n          ...prevState,\r\n          comicNum: prevState.comicNum - 1\r\n        }),\r\n        () => this.getNewComic()\r\n      );\r\n    }\r\n  };\r\n  randomComicHandler = () => {\r\n    let randomComic = Math.floor(Math.random() * 900) + 1; //random comic nums between 1 to 900\r\n    this.setState(\r\n      prevState => ({\r\n        ...prevState,\r\n        comicNum: randomComic\r\n      }),\r\n      () => this.getNewComic()\r\n    );\r\n  };\r\n  getNewComic = () => {\r\n    Axios.get(`/api/comic/${this.state.comicNum}`).then(res => {\r\n      let comic = res.data;\r\n      this.setState(prevState => {\r\n        return {\r\n          ...prevState,\r\n          comic: {\r\n            title: comic.title,\r\n            img: comic.img,\r\n            transcript: comic.transcript,\r\n            day: comic.day,\r\n            month: comic.month,\r\n            year: comic.year\r\n          }\r\n        };\r\n      });\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getNewComic();\r\n  }\r\n  render() {\r\n    console.log(`comicNum: ${this.state.comicNum}`);\r\n    let { title, img, transcript, day, month, year } = this.state.comic;\r\n    let newTranscript;\r\n    if (transcript != \"\") {\r\n      newTranscript = transcript.replace(/[{()}]/g, \"\"); //remving the round and squiggly brackets\r\n      newTranscript = newTranscript.replace(/[\\[\\]']+/g, \"\"); //removeing the square brackets\r\n    } else {\r\n      newTranscript = <>None Available</>;\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"mt-2\">\r\n          <Button variant=\"warning mr-2\" onClick={this.prevComicNumHandler}>\r\n            Previous Commic\r\n          </Button>\r\n          <Button variant=\"success mr-2\" onClick={this.nextComicNumHandler}>\r\n            Next Comic\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={this.randomComicHandler}>\r\n            Random Comic\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"mt-3\">\r\n          <h2>Comic Book: {title}</h2>\r\n          <img src={img} />\r\n          <p className=\"mt-2\">\r\n            <span className=\"title\">Details: </span>\r\n            <span className=\"details\">{newTranscript}</span>\r\n          </p>\r\n          <p>\r\n            <span className=\"title\">Release Date (dd-mm-yyyy): </span>\r\n            <span className=\"details\">\r\n              {day}-{month}-{year}\r\n            </span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Comic from \"./Comic\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ComicsDashboard from \"./ComicsDashboard\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Comic latest />\r\n        <Link\r\n          style={{ textDecoration: \"none\" }}\r\n          className=\"text-white link\"\r\n          to=\"/comics\"\r\n        >\r\n          <Button variant=\"secondary\">See Other Comics</Button>\r\n        </Link>\r\n        {/* <ComicsDashboard /> */}\r\n        {/* <button>See Other Comics</button> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Navbar as NavBar } from \"react-bootstrap\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <NavBar bg=\"dark\" variant=\"dark\">\r\n      <NavBar.Brand>\r\n        <NavLink className=\"d-inline p-2  text-white\" to=\"/\">\r\n          Cyber City Comics\r\n        </NavLink>\r\n      </NavBar.Brand>\r\n    </NavBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst NoMatch = () => {\r\n    return (\r\n        <div>\r\n            <h1>Page Not Found</h1>\r\n            <p>Page you are looking for, doesn't exist.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoMatch;\r\n","import React, { Component } from \"react\";\n\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Comic from \"./components/Comic\";\nimport Navbar from \"./components/Navbar\";\nimport ComicsDashboard from \"./components/ComicsDashboard\";\nimport NoMatch from \"./components/NoMatch\";\n\nimport {Container} from \"react-bootstrap\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Navbar />\n        <Container>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/comics\" component={ComicsDashboard} />\n            <Route path=\"/comics/:comicId\" component={Comic} />\n            <Route component={NoMatch} />\n          </Switch>\n        </Container>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}